name: CI checks + deployment

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

permissions:
  contents: write

jobs:
  checks:
    name: Checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event_name == 'pull_request' && github.head_ref || github.ref }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Rokit
        uses: ./.github/actions/setup-rokit

      - name: Format with StyLua
        run: |
          chmod +x scripts/shell/format.sh
          ./scripts/shell/format.sh src

      - name: Lint with Selene
        run: |
          chmod +x scripts/shell/lint.sh
          ./scripts/shell/lint.sh src

      - name: Run Luau tests via Open Cloud
        run: |
          chmod +x scripts/shell/test.sh
          ./scripts/shell/test.sh default.project.json $TEST_TASK_FILE
        env:
          ROBLOX_API_KEY: ${{ secrets.ROBLOX_API_KEY }}
          ROBLOX_UNIVERSE_ID: ${{ vars.ROBLOX_TEST_UNIVERSE_ID }}
          ROBLOX_PLACE_ID: ${{ vars.ROBLOX_TEST_PLACE_ID }}
          TEST_TASK_FILE: src/ServerScriptService/Dev/TestRunner.server.luau

      - name: Commit and push formatting changes
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

          if [[ -n $(git status --porcelain) ]]; then
            echo "Formatting changes detected. Committing and pushing..."
            git add .
            git commit -m "style: Automatically format Luau code"
            git push
          else
            echo "No formatting changes to commit."
          fi

  # deployment:
  #   name: Deployment
  #   runs-on: ubuntu-latest
  #   needs: [checks]
  #   if: github.event_name == 'push' && github.ref == 'refs/heads/main'
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: ./.github/actions/setup-rokit
  #     - run: rojo upload default.project.json --api_key ${{ secrets.ROBLOX_API_KEY }} --universe_id ${{ vars.ROBLOX_PRODUCTION_UNIVERSE_ID }} --asset_id ${{ vars.ROBLOX_PRODUCTION_PLACE_ID }}
